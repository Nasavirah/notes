//Angular-
Interpolation with double curly braces to display a component property.
ngFor to display an array of items.
A TypeScript class to shape the model data for your component and display properties of that model.
ngIf to conditionally display a chunk of HTML based on a boolean expression.

The string "let item of items" means:
Take each item in the items array, store it in the local item looping variable,
and make it available to the templated HTML for each iteration.

NgIf—conditionally creates or destroys subviews from the template.
NgFor—repeat a node for each item in a list.
NgSwitch—a set of directives that switch among alternative views.

//css tooltips-
reset-3c756112--copyButton-5f832aa0--tooltipped-f420f462::before {
   top: calc(100% + 8px);
   left: 50%;
   width: 0px;
   bottom: auto;
   height: 0px;
   content: "";
   display: none;
   opacity: 0;
   z-index: 156;
   position: absolute;
   transform: translateX(-50%);
   animation-name: keyframes-animation-bd7e9c6a-0-1-8;
   border-top-width: 0px;
   border-left-width: 8px;
   animation-duration: 0.2s;
   border-right-width: 8px;
   animation-fill-mode: forwards;
   border-bottom-width: 8px;
   border-color: rgb(36, 42, 49) transparent;
   border-style: solid;
}

//Box shadow
box-shadow: 0 4px 10px rgba(60,64,67,.28)

//Animation
p {
 animation-duration: 3s;
 animation-name: slidein;
  animation-iteration-count: infinite;
   animation-direction: alternate;
}
p {
 animation: 3s infinite alternate slidein;
 animation: 3s 5 alternate slidein;
animation-name: fadeInOut, moveLeft300px, bounce;
animation-duration: 2.5s, 5s, 1s;
animation-iteration-count: 2, 1, 5;
}
@keyframes slidein {
 from {
   margin-left: 100%;
   width: 300%;
 }
 to {
   margin-left: 0%;
   width: 100%;
 }
}75% {
 font-size: 300%;
 margin-left: 25%;
 width: 150%;
}